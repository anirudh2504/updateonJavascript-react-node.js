{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anira\\\\Desktop\\\\updateonJavascript-react-node.js\\\\FullProject\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport HomePage from './pages/HomePage.jsx';\nimport { createBrowserRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst browserRouter = createBrowserRouter([{\n  path: '/',\n  element: \"\"\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello\", /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["HomePage","createBrowserRouter","jsxDEV","_jsxDEV","browserRouter","path","element","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anira/Desktop/updateonJavascript-react-node.js/FullProject/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n\nimport HomePage from './pages/HomePage.jsx'\nimport {createBrowserRouter} from 'react-router-dom'\nconst browserRouter=createBrowserRouter([\n  {path:'/', element:\"\"}\n])\nfunction App() {\n  return <div>\n    Hello\n    <HomePage/>\n  \n  </div>;\n  \n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,SAAQC,mBAAmB,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACpD,MAAMC,aAAa,GAACH,mBAAmB,CAAC,CACtC;EAACI,IAAI,EAAC,GAAG;EAAEC,OAAO,EAAC;AAAE,CAAC,CACvB,CAAC;AACF,SAASC,GAAGA,CAAA,EAAG;EACb,oBAAOJ,OAAA;IAAAK,QAAA,GAAK,OAEV,eAAAL,OAAA,CAACH,QAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAER;AAACC,EAAA,GAPQN,GAAG;AASZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}